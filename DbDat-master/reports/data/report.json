{"title":"Assessment: mongodb database Sample_Database on localhost with the user  and 22 queries.", "report_data":[{"title": "Enable Authentication", "category": "Configuration", "description": "\n    check_configuration_auth:\n    Authentication should be enabled. Set auth to true to enable database\n    authentication for users connecting from remote hosts. This setting \n    applies to MondoDB versions below 2.6.\n    ", "result": {"level": "GRAY", "output": "This check does not apply to MongoDB versions 2.6 and above."}},{"title": "Authorization", "category": "Configuration", "description": "\n    check_configuration_authorization:\n    Enables Role-Based Access Control (RBAC) to govern each user's access to\n    database resources and operations.\n\n    MongoDB versions 2.6.4 and above, check the security.authorization configuration option.\n    ", "result": {"level": "RED", "output": "security.authorization not found, not enabled."}},{"title": "JSONP Enabled", "category": "Configuration", "description": "\n    check_configuration_jsonp:\n\n    Set to true to permit JSONP access via an HTTP interface. Consider the security\n    implications of allowing this activity before setting this option.\n\n    The jsonp configuration option in versions <=2.6.\n    The net.http.JSONPEnabled configuration option in versions >2.6\n    ", "result": {"level": "GREEN", "output": "net.http.JSONPEnabled is (not found) not enabled."}},{"title": "Key File for Replica Set", "category": "Configuration", "description": "\n    check_configuration_keyfile:\n    Specify a shared key file to enable communication between MongoDB instances in a\n    replica set.\n\n    MongoDB versions under 2.6: check the \"keyFile\" configuration option\n    MongoDB versions 2.6 and above, check the security.keyFile option\n    ", "result": {"level": "YELLOW", "output": "security.keyFile is (not found) not enabled."}},{"title": "Localhost Auth Bypass", "category": "Configuration", "description": "\n    check_configuration_localhost_auth_bypass:\n    The localhost exception allows you to enable authorization before creating\n    the first user in the system. When active, the localhost exception allows\n    all connections from the localhost interface to have full access to that\n    instance. The exception applies only when there are no users created in the\n    MongoDB instance.\n    ", "result": {"level": "RED", "output": "setParameter.enableLocalhostAuthBypass is (not found) enabled."}},{"title": "No Authentication", "category": "Configuration", "description": "\n    check_configuration_noauth:\n    This will explicitly disable authentication. This setting applies to MondoDB versions below 2.6.\n    ", "result": {"level": "GRAY", "output": "This check does not apply to MongoDB versions 2.6 and above."}},{"title": "No HTTP Interface", "category": "Configuration", "description": "\n    check_configuration_nohttpinterface:\n    Mongodb by default provides a http interface running by default on port 28017 which\n    provides the \"home\" status page. This interface is not recommended for production\n    use and is best disabled. Use the \"nohttpinterface\" configuration setting to disable\n    the http interface.\n    ", "result": {"level": "GREEN", "output": "net.http.enabled is (not found, default is False) not enabled."}},{"title": "No Scripting", "category": "Configuration", "description": "\n    check_configuration_noscripting:\n\n    MongoDB supports the execution of JavaScript code for certain server-side operations:\n    mapReduce, group, eval, and $where. If you do not use these operations, disable server-side\n    scripting by using:\n\n    The --noscripting option on the command line in versions <=2.6.\n    The security.javascriptEnabled configuration option in versions >2.6\n    ", "result": {"level": "RED", "output": "security.javascriptEnabled is (not found) enabled."}},{"title": "REST Interface", "category": "Configuration", "description": "\n    check_configuration_rest_interface:\n    The monogdb REST interface is not recommended for production. It does not support\n    any authentication. It is turned off by default. If you have turned it on using\n    the \"rest\" configuration option you should turn it off for production systems.\n\n    MongoDB versions under 2.6: check the \"rest\" configuration option\n    MongoDB versions 2.6 and above, check the net.http.RESTInterfaceEnabled option\n    ", "result": {"level": "GREEN", "output": "net.http.RESTInterfaceEnabled is (not found, default is False) not enabled."}},{"title": "Enable SSL", "category": "Configuration", "description": "\n    check_configuration_ssl:\n    If you don't use SSL your data is traveling between your Mongo client and Mongo\n    server unencrypted and is susceptible to eavesdropping, tampering and \"man in\n    the middle\" attacks. This is especially important if you are connecting to your\n    Mongodb server over unsecure networks like the internet.\n\n    MongoDB versions under 2.6: check if the \"sslPEMKeyFile\" configuration option is set.\n    MongoDB versions 2.6 and above, check the net.ssl.mode option.\n    ", "result": {"level": "RED", "output": "SSL is (net.ssl.mode not found) not enabled."}},{"title": "Allow Invalid Certificate", "category": "Configuration", "description": "\n    check_configuration_ssl_allow_invalid_cert:\n    Bypasses the validation checks for TLS/SSL certificates on other servers in\n    the cluster and allows the use of invalid certificates. When using the \n    allowInvalidCertificates setting, MongoDB logs as a warning the use of the \n    invalid certificate.\n\n    MongoDB versions 2.6.4 and above, check the net.ssl.weakCertificateValidation configuration option.\n    ", "result": {"level": "GREEN", "output": "net.ssl.allowInvalidCertificates not found, not enabled."}},{"title": "SSL FIPS Mode", "category": "Configuration", "description": "\n    check_configuration_ssl_fips_mode:\n    When specified, mongos will use the FIPS mode of the installed OpenSSL \n    library. Your system must have a FIPS compliant OpenSSL library to use \n    --sslFIPSMode.\n    \n    MongoDB versions under 2.6: check if \"--sslFIPSMode\" was passed as a command line argument.\n    MongoDB versions 2.6 and above, check the net.ssl.FIPSMode configuration option.\n    ", "result": {"level": "YELLOW", "output": "net.ssl.FIPSMode not found, not enabled."}},{"title": "Weak Certificate Validation", "category": "Configuration", "description": "\n    check_configuration_ssl_weak_cert_validation:\n    Disables the requirement for SSL certificate validation, that --sslCAFile \n    enables. With --sslWeakCertificateValidation, mongod or mongos will accept \n    connections if the client does not present a certificate when establishing \n    the connection.\n\n    MongoDB versions under 2.6: check if \"--sslWeakCertificateValidation\" was passed as a command line argument.\n    MongoDB versions 2.6 and above, check the net.ssl.weakCertificateValidation configuration option.\n    ", "result": {"level": "GREEN", "output": "net.ssl.weakCertificateValidation not found, not enabled."}},{"title": "System Log Quiet", "category": "Configuration", "description": "\n    check_configuration_systemlog_quiet:\n    Runs the mongos or mongod in a quiet mode that attempts to limit the amount\n    of output. This option is not recommended for production systems as it may \n    make tracking problems during particular connections much more difficult.\n\n    MongoDB versions 2.6.4 and above, check the systemLog.quiet configuration option.\n    ", "result": {"level": "GREEN", "output": "systemLog.quiet not found, not enabled."}},{"title": "Test Database", "category": "Configuration", "description": "\n    check_configuration_test_database:\n    Test databases should not exist in production.\n    ", "result": {"level": "GREEN", "output": "A \"test\" database was not found."}},{"title": "Authentication Required", "category": "Configuration", "description": "\n    check_configuration_verify_auth:\n    Verifying authentication is required.\n    ", "result": {"level": "RED", "output": "Unauthenticated connection succeded, database list:\n['Sample_Database', 'admin', 'config', 'local']\n"}},{"title": "Version Check", "category": "Configuration", "description": "\n    check_configuration_version:\n    Determine current database version\n    ", "result": {"level": "GREEN", "output": "4.2.6 recent version."}},{"title": "Server Info", "category": "Information", "description": "\n    check_configuration_version:\n    Determine current database version\n    ", "result": {"level": "GREEN", "output": "version = 4.2.6\ngitVersion = 20364840b8f1af16917e4c23c1b5f5efd8b352f8\ntargetMinOS = Windows 7/Windows Server 2008 R2\nmodules = []\nallocator = tcmalloc\njavascriptEngine = mozjs\nsysInfo = deprecated\nversionArray = [4, 2, 6, 0]\nopenssl = {'running': 'Windows SChannel'}\nbuildEnvironment = {'distmod': '2012plus', 'distarch': 'x86_64', 'cc': 'cl: Microsoft (R) C/C++ Optimizing Compiler Version 19.16.27038 for x64', 'ccflags': '/nologo /EHsc /W3 /wd4068 /wd4244 /wd4267 /wd4290 /wd4351 /wd4355 /wd4373 /wd4800 /wd5041 /wd4291 /we4013 /we4099 /we4930 /WX /errorReport:none /MD /O2 /Oy- /bigobj /utf-8 /permissive- /Zc:__cplusplus /Zc:sizedDealloc /volatile:iso /diagnostics:caret /std:c++17 /Gw /Gy /Zc:inline', 'cxx': 'cl: Microsoft (R) C/C++ Optimizing Compiler Version 19.16.27038 for x64', 'cxxflags': '/TP', 'linkflags': '/nologo /DEBUG /INCREMENTAL:NO /LARGEADDRESSAWARE /OPT:REF', 'target_arch': 'x86_64', 'target_os': 'windows'}\nbits = 64\ndebug = False\nmaxBsonObjectSize = 16777216\nstorageEngines = ['biggie', 'devnull', 'ephemeralForTest', 'wiredTiger']\nok = 1.0\n"}},{"title": "Bind IP", "category": "Information", "description": "\n    check_information_bind_ip:\n    If your system has multiple network interfaces you can use the \"bind_ip\" option\n    to restrict your mongodb server to listen only on the interfaces that are\n    relevant. By default mongodb will bind to all the interfaces.\n    ", "result": {"level": "GREEN", "output": "Bind IP is (127.0.0.1) enabled."}},{"title": "Command Line Options", "category": "Information", "description": "\n    check_information_cmd_line_opts:\n    Command line options used when starting MongoDB.\n    ", "result": {"level": "GREEN", "output": "C:\\Program Files\\MongoDB\\Server\\4.2\\bin\\mongod.exe\n--config\nC:\\Program Files\\MongoDB\\Server\\4.2\\bin\\mongod.cfg\n--service\n"}},{"title": "Database list", "category": "Information", "description": "\n    check_information_database_list:\n    List of availible databases.\n    ", "result": {"level": "GREEN", "output": "Sample_Database\nadmin\nconfig\nlocal\n"}},{"title": "Weak Password", "category": "User", "description": "\n    check_user_weak_password:\n    Accounts with weak passwords.\n    ", "result": {"level": "GREEN", "output": "No weak password found."}}]}